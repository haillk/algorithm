package com.tencent.array;

public class Son {


	public static void main(String[] args) {

		int[] w = { 0, 2, 4, 6, 3, 2 };// 重量
		int[] v = { 0, 2, 1, 5, 4, 3 };// 价值
		int[] n = { 0, 3, 2, 4, 2, 5 };
		int bag = 10;
		// $01bag(w, v, bag);
		// $fullBag(w, v, bag);
		$duochongBag(w, v, n, bag);
	}

	public static void $duochongBag(int[] w, int[] v, int[] n, int bag) {
		int len = w.length - 1;
		int f[] = new int[bag + 1];
		for (int i = 1; i <= len; i++) {
			for (int j = bag; j >=0; j--) {
				for (int k = 0; k <= n[i]; k++) {
					if (j - k * w[i] < 0)
						break;
					f[j] = Math.max(f[j], f[j - k * w[i]] + k * v[i]);
				}

			}
			out(f);
		}
	}

//完全背包
	public static void $fullBag(int[] w, int[] v, int bag) {
		int n = w.length - 1;
		int f[] = new int[bag + 1];
		for (int i = 1; i <= n; i++) {
			for (int j = w[i]; j <= bag; j++) {
				f[j] = Math.max(f[j], f[j - w[i]] + v[i]);
			}
			out(f);
		}
	}
	// 01背包
	public static void $01bag(int[] w, int[] v, int bag) {
		int n = w.length - 1;
		int f[] = new int[bag + 1];
		for (int i = 1; i <= n; i++) {
			for (int j = bag; j >= 0; j--) {
				if (w[i] <= j) {
					f[j] = Math.max(f[j], f[j - w[i]] + v[i]);

				}

				else
					f[j] = f[j];
			}
			out(f);
		}
		out(f);
	}
	public static void out(int[] f) {
		for (int i : f) {
			System.out.print(i + " ");
		}
		System.out.println();
	}
}





